[core]
name: PixelManager
price: Pixels=1
maxHp: 1
mass: 1
displayText: ?
displayDescription: ?
buildSpeed: 0s
radius: 1
showInEditor: false
isUnselectable: true
canNotBeDamaged: true
canNotBeDirectlyAttacked: true
onNewMapSpawn: spawnPoint_eachActiveTeam
fogOfWarSightRange: 0
fogOfWarSightRangeWhileNotBuilt: 0
showOnMinimap: false

[graphics]
image: PixelManager.png
image_shadow: NONE

[attack]
canAttack: false

[movement]
movementType: NONE

[hiddenAction_convertToPixels]
autoTriggerOnEvent: created
addResources: maxPixels=0.01, Pixels=0.01, maxCmPixels=0.01, CmPixels=0.01, maxLqPixels=0.01, LqPixels=0.01
resourceAmount: Pixels
resourceAmount_setValue: 0
resourceAmount_addOtherResource: credits
alsoTriggerAction: convertToMaxPixels

[hiddenAction_convertToMaxPixels]
resourceAmount: maxPixels
resourceAmount_setValue: 0
resourceAmount_addOtherResource: credits 
alsoTriggerAction: removeCredits

[hiddenAction_removeCredits]
resourceAmount: credits
resourceAmount_setValue: 0

[hiddenAction_checkPx]
autoTrigger: if self.isResourceLargerThan(source='Pixels', compareTarget='maxPixels') and self.resource(type='maxPixels', greaterThan=0)
requireConditional: if self.isResourceLargerThan(source='Pixels', compareTarget='maxPixels') and self.resource(type='maxPixels', greaterThan=0)
resourceAmount: Pixels
resourceAmount_setValue: 0
resourceAmount_addOtherResource: maxPixels
alsoTriggerAction: checkPx

[hiddenAction_checkCmPx] 
autoTrigger: if self.isResourceLargerThan(source='CmPixels', compareTarget='maxCmPixels') and self.resource(type='maxCmPixels', greaterThan=0)
requireConditional: if self.isResourceLargerThan(source='CmPixels', compareTarget='maxCmPixels') and self.resource(type='maxCmPixels', greaterThan=0)
resourceAmount: CmPixels
resourceAmount_setValue: 0
resourceAmount_addOtherResource: maxCmPixels
alsoTriggerAction: checkCmPx

[hiddenAction_checkLqPx] 
autoTrigger: if self.isResourceLargerThan(source='LqPixels', compareTarget='maxLqPixels') and self.resource(type='maxLqPixels', greaterThan=0)
requireConditional: if self.isResourceLargerThan(source='LqPixels', compareTarget='maxLqPixels') and self.resource(type='maxLqPixels', greaterThan=0)
resourceAmount: LqPixels
resourceAmount_setValue: 0
resourceAmount_addOtherResource: maxLqPixels
alsoTriggerAction: checkLqPx

[hiddenAction_fullPx] 
autoTrigger: if self.isResourceLargerThan(source='Pixels', compareTarget='maxPixels', byMoreThan=-0.001) and self.customTimer(laterThanSeconds=15)
showMessageToPlayer: Out of space for pixels!
showMessageToPlayer_ru: Закончилось место для пикселей!
resetCustomTimer: true

[hiddenAction_fullCmPx] 
autoTrigger: if self.isResourceLargerThan(source='CmPixels', compareTarget='maxCmPixels', byMoreThan=-0.001) and self.customTimer(laterThanSeconds=15)
showMessageToPlayer: Out of space for compressed pixels!
showMessageToPlayer_ru: Закончилось место для сжатых пикселей!
resetCustomTimer: true

[hiddenAction_fullLqPx] 
autoTrigger: if self.isResourceLargerThan(source='LqPixels', compareTarget='maxLqPixels', byMoreThan=-0.001) and self.customTimer(laterThanSeconds=15)
showMessageToPlayer: Out of space for liquid pixels!
showMessageToPlayer_ru: Закончилось место для жидких пикселей!
resetCustomTimer: true